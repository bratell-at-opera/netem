#!/bin/bash

function printHelp {
    if [ -n "$2" ]; then
        echo "ERROR: $2"
        echo ""
    else
        echo "netem - Simulates a bottleneck link of your choise."
    fi
    echo
    echo "Usage:"
    echo "      $1 arguments"
    echo ""
    echo "--loss-rate-dl= / --loss-rate-ul="
    echo "      Specify the loss rate on the down-link/up-link given in percent. 1-3% on down-link in rare cases but mostly below 1% by an order of magnitude. Up-link rarely sees loss in cellular networks. "
    echo ""
    echo "--delay-dl= / --delay-ul"
    echo "      Specify the delay in ms on the down-link/up-link. "
    echo ""
    echo "--delay-deviation-dl= / --delay-deviation-ul"
    echo "      Specify the standard deviation of the delay ms on the down-link/up-link. "
    echo ""
    echo "--loss-rate-dl= / --loss-rate-ul"
    echo "      Specify the tandard deviation of the delay ms on the down-link/up-link. "
    echo ""
    echo "--bandwidth-dl= / --bandwidth-ul"
    echo "      Specify the tandard deviation of the delay ms on the down-link/up-link. "
    exit 1
}

if [ "$USER" != "root" ]; then
    printHelp $0 "Must be run as root!"
fi

netemFolder="$(realpath $(dirname $0))../"
myUser=$(logname)

limitArgs=""

# Set extblog extension in bash in order for case-switch to work (disabled when executing script)
shopt -s extglob
# Handle in-arguments
for argument in "$@"
do
    case $argument in
        # Debug mode does not initialize a virtual display
        --loss-rate-@(dl|ul)=*)
            limitArgs="$limitArgs $argument"
            shift
            ;;
        --delay-@(dl|ul)=*)
            limitArgs="$limitArgs $argument"
            shift
            ;;
        --delay-deviation-@(dl|ul)=*)
            limitArgs="$limitArgs $argument"
            shift
            ;;
        --bandwidth-@(dl|ul)=*)
            limitArgs="$limitArgs $argument"
            shift
            ;;
        *)
            printHelp $0 "Invalid argument: $argument"
            ;;
    esac
done


# Setup link limits
$netemFolder/share/configure.bash
if [ $? != 0 ]; then
    echo "ERROR: Failed to setup virtual network!"
    exit 3
fi
$netemFolder/share/limit-bottleneck.bash $limitArgs
if [ $? != 0 ]; then
    echo "ERROR: Failed to limit network links!"
    exit 3
fi

# ------------------ RUN

ip netns exec client-ns su $myUser -c "bash"

# ----------------- TEARDOWN
$netemFolder/share/teardown.bash

